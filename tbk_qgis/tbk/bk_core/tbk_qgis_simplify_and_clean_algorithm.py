# -*- coding: utf-8 -*-

""" TBk simplify and clean algorithm.
This QGIS plugin allows to simplify the stand boundaries and to clean the stand data.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

Todo:
    * Merge main branch when config pull request is integrated
    * Enhance the helpstring
"""

__authors__ = 'Dominique Weber, Christoph Schaller'
__copyright__ = '(C) 2024 by Berner Fachhochschule HAFL'
__date__ = '2020-08-03'
__email__ = "christian.rosset@bfh.ch"
# This will get replaced with a git SHA1 when you do a git archive
__revision__ = '$Format:%H$'

import logging
from qgis.core import QgsProcessingParameterString, QgsProcessingParameterNumber, \
    QgsProcessingParameterBoolean, QgsProcessingParameterFile
from tbk_qgis.tbk.bk_core.post_process import post_process
from tbk_qgis.tbk.bk_core.tbk_qgis_processing_algorithm import TBkProcessingAlgorithm
from tbk_qgis.tbk.utility.tbk_utilities import ensure_dir


class TBkSimplifyAndCleanAlgorithm(TBkProcessingAlgorithm):
    """
    todo
    """
    # ------- Define Constants -------#
    # Constants used to refer to parameters and outputs.

    # These constants will be used when calling the algorithm from another algorithm,
    # or when calling from the QGIS console.

    OUTPUT = "OUTPUT"

    # Folder containing all the inputs and where to save the outputs
    WORKING_ROOT = "working_root"
    # Default log file name
    LOGFILE_NAME = "logfile_name"
    # Simplification tolerance
    SIMPLIFICATION_TOLERANCE = "simplification_tolerance"

    # Additional parameters
    # Min. area to eliminate small stands
    MIN_AREA_M2 = "min_area_m2"
    # Delete temporary files and fields
    DEL_TMP = "del_tmp"

    def initAlgorithm(self, config=None):
        """
        Here we define the inputs and output of the algorithm, along with some other properties.
        """

        # --- Parameters generated by the stand delineation algorithm
        # These parameters are only displayed a config parameter is given
        if not config:
            self.addParameter(QgsProcessingParameterFile(self.WORKING_ROOT,
                                                         "Working root folder",
                                                         behavior=QgsProcessingParameterFile.Folder))

        # --- Advanced Parameters
        parameter = QgsProcessingParameterString(self.LOGFILE_NAME, "Log File Name (.log)",
                                                 defaultValue="tbk_processing.log")
        self.add_advanced_parameter(parameter)

        parameter = QgsProcessingParameterNumber(self.SIMPLIFICATION_TOLERANCE, "Simplification tolerance [m]",
                                                 type=QgsProcessingParameterNumber.Double, defaultValue=8)
        self.add_advanced_parameter(parameter)

        parameter = QgsProcessingParameterNumber(self.MIN_AREA_M2, "Min. area to eliminate small stands",
                                                 type=QgsProcessingParameterNumber.Integer, defaultValue=1000)
        self.add_advanced_parameter(parameter)

        # Additional parameters
        parameter = QgsProcessingParameterBoolean(self.DEL_TMP, "Delete temporary files and fields", defaultValue=True)
        self.add_advanced_parameter(parameter)

    def processAlgorithm(self, parameters, context, feedback):
        """
        Here is where the processing itself takes place.
        """
        # --- get input parameters
        inputs = self.get_inputs(parameters, context)

        # Handle the working root and temp output folders
        working_root = inputs.working_root
        ensure_dir(working_root)
        tmp_output_folder = self.get_tmp_output_path(inputs.working_root)
        ensure_dir(tmp_output_folder)

        # set logger
        self.configure_logging(inputs.working_root, inputs.logfile_name)
        log = logging.getLogger('Simplify & Eliminate')

        # ------- TBk Processing --------#
        # --- Simplify & Eliminate
        log.info('Starting')
        post_process(inputs.working_root, tmp_output_folder, inputs.min_area_m2, inputs.simplification_tolerance,
                     inputs.del_tmp)  # todo: delete tmp geopackages instead of shp

        return {self.WORKING_ROOT: inputs.working_root}

    def createInstance(self):
        """
        Returns a new algorithm instance
        """
        return TBkSimplifyAndCleanAlgorithm()

    def name(self):
        """
        Returns the algorithm name, used for identifying the algorithm. This
        string should be fixed for the algorithm, and must not be localised.
        The name should be unique within each provider. Names should contain
        lowercase alphanumeric characters only and no spaces or other
        formatting characters.
        """
        return 'Simplify and Clean'

    def shortHelpString(self):
        """
        Returns a localised short help string for the algorithm.
        """
        return ('Processing of the "raw" TBk classification. This Algorithm eliminates small stands polygons inferior '
                'to the minimum area and simplifies the stand boundaries using the simplification tolerance.')
